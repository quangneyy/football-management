#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLySanBong.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLySanMini")]
	public partial class dbSanContentDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietHoaDonBan(ChiTietHoaDonBan instance);
    partial void UpdateChiTietHoaDonBan(ChiTietHoaDonBan instance);
    partial void DeleteChiTietHoaDonBan(ChiTietHoaDonBan instance);
    partial void InsertChiTietHoaDonNhap(ChiTietHoaDonNhap instance);
    partial void UpdateChiTietHoaDonNhap(ChiTietHoaDonNhap instance);
    partial void DeleteChiTietHoaDonNhap(ChiTietHoaDonNhap instance);
    partial void InsertHoaDonBanHang(HoaDonBanHang instance);
    partial void UpdateHoaDonBanHang(HoaDonBanHang instance);
    partial void DeleteHoaDonBanHang(HoaDonBanHang instance);
    partial void InsertHoaDonNhap(HoaDonNhap instance);
    partial void UpdateHoaDonNhap(HoaDonNhap instance);
    partial void DeleteHoaDonNhap(HoaDonNhap instance);
    partial void InsertLoaiSan(LoaiSan instance);
    partial void UpdateLoaiSan(LoaiSan instance);
    partial void DeleteLoaiSan(LoaiSan instance);
    partial void InsertMatHang(MatHang instance);
    partial void UpdateMatHang(MatHang instance);
    partial void DeleteMatHang(MatHang instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertSan(San instance);
    partial void UpdateSan(San instance);
    partial void DeleteSan(San instance);
    #endregion
		
		public dbSanContentDataContext() : 
				base(global::QuanLySanBong.Properties.Settings.Default.QuanLySanMiniConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbSanContentDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbSanContentDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbSanContentDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbSanContentDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonBan> ChiTietHoaDonBans
		{
			get
			{
				return this.GetTable<ChiTietHoaDonBan>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonNhap> ChiTietHoaDonNhaps
		{
			get
			{
				return this.GetTable<ChiTietHoaDonNhap>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonBanHang> HoaDonBanHangs
		{
			get
			{
				return this.GetTable<HoaDonBanHang>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonNhap> HoaDonNhaps
		{
			get
			{
				return this.GetTable<HoaDonNhap>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSan> LoaiSans
		{
			get
			{
				return this.GetTable<LoaiSan>();
			}
		}
		
		public System.Data.Linq.Table<MatHang> MatHangs
		{
			get
			{
				return this.GetTable<MatHang>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<San> Sans
		{
			get
			{
				return this.GetTable<San>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDonBan")]
	public partial class ChiTietHoaDonBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHoaDon;
		
		private int _IDMatHang;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _DonGia;
		
		private EntityRef<HoaDonBanHang> _HoaDonBanHang;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHoaDonChanging(int value);
    partial void OnIDHoaDonChanged();
    partial void OnIDMatHangChanging(int value);
    partial void OnIDMatHangChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public ChiTietHoaDonBan()
		{
			this._HoaDonBanHang = default(EntityRef<HoaDonBanHang>);
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHoaDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHoaDon
		{
			get
			{
				return this._IDHoaDon;
			}
			set
			{
				if ((this._IDHoaDon != value))
				{
					if (this._HoaDonBanHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHoaDonChanging(value);
					this.SendPropertyChanging();
					this._IDHoaDon = value;
					this.SendPropertyChanged("IDHoaDon");
					this.OnIDHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMatHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMatHang
		{
			get
			{
				return this._IDMatHang;
			}
			set
			{
				if ((this._IDMatHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMatHangChanging(value);
					this.SendPropertyChanging();
					this._IDMatHang = value;
					this.SendPropertyChanged("IDMatHang");
					this.OnIDMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBanHang_ChiTietHoaDonBan", Storage="_HoaDonBanHang", ThisKey="IDHoaDon", OtherKey="IDHoaDon", IsForeignKey=true)]
		public HoaDonBanHang HoaDonBanHang
		{
			get
			{
				return this._HoaDonBanHang.Entity;
			}
			set
			{
				HoaDonBanHang previousValue = this._HoaDonBanHang.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonBanHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonBanHang.Entity = null;
						previousValue.ChiTietHoaDonBans.Remove(this);
					}
					this._HoaDonBanHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonBans.Add(this);
						this._IDHoaDon = value.IDHoaDon;
					}
					else
					{
						this._IDHoaDon = default(int);
					}
					this.SendPropertyChanged("HoaDonBanHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietHoaDonBan", Storage="_MatHang", ThisKey="IDMatHang", OtherKey="ID", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.ChiTietHoaDonBans.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonBans.Add(this);
						this._IDMatHang = value.ID;
					}
					else
					{
						this._IDMatHang = default(int);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDonNhap")]
	public partial class ChiTietHoaDonNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHoaDon;
		
		private int _IDMatHang;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _DonGiaNhap;
		
		private EntityRef<HoaDonNhap> _HoaDonNhap;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHoaDonChanging(int value);
    partial void OnIDHoaDonChanged();
    partial void OnIDMatHangChanging(int value);
    partial void OnIDMatHangChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaNhapChanging(System.Nullable<int> value);
    partial void OnDonGiaNhapChanged();
    #endregion
		
		public ChiTietHoaDonNhap()
		{
			this._HoaDonNhap = default(EntityRef<HoaDonNhap>);
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHoaDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHoaDon
		{
			get
			{
				return this._IDHoaDon;
			}
			set
			{
				if ((this._IDHoaDon != value))
				{
					if (this._HoaDonNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHoaDonChanging(value);
					this.SendPropertyChanging();
					this._IDHoaDon = value;
					this.SendPropertyChanged("IDHoaDon");
					this.OnIDHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMatHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMatHang
		{
			get
			{
				return this._IDMatHang;
			}
			set
			{
				if ((this._IDMatHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMatHangChanging(value);
					this.SendPropertyChanging();
					this._IDMatHang = value;
					this.SendPropertyChanged("IDMatHang");
					this.OnIDMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaNhap", DbType="Int")]
		public System.Nullable<int> DonGiaNhap
		{
			get
			{
				return this._DonGiaNhap;
			}
			set
			{
				if ((this._DonGiaNhap != value))
				{
					this.OnDonGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._DonGiaNhap = value;
					this.SendPropertyChanged("DonGiaNhap");
					this.OnDonGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhap_ChiTietHoaDonNhap", Storage="_HoaDonNhap", ThisKey="IDHoaDon", OtherKey="ID", IsForeignKey=true)]
		public HoaDonNhap HoaDonNhap
		{
			get
			{
				return this._HoaDonNhap.Entity;
			}
			set
			{
				HoaDonNhap previousValue = this._HoaDonNhap.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonNhap.Entity = null;
						previousValue.ChiTietHoaDonNhaps.Remove(this);
					}
					this._HoaDonNhap.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonNhaps.Add(this);
						this._IDHoaDon = value.ID;
					}
					else
					{
						this._IDHoaDon = default(int);
					}
					this.SendPropertyChanged("HoaDonNhap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietHoaDonNhap", Storage="_MatHang", ThisKey="IDMatHang", OtherKey="ID", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.ChiTietHoaDonNhaps.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonNhaps.Add(this);
						this._IDMatHang = value.ID;
					}
					else
					{
						this._IDMatHang = default(int);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonBanHang")]
	public partial class HoaDonBanHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHoaDon;
		
		private System.Nullable<int> _IDSan;
		
		private System.Nullable<System.DateTime> _ThoiGianBDau;
		
		private System.Nullable<System.DateTime> _ThoiGianKetThuc;
		
		private System.Nullable<int> _DonGiaSan;
		
		private System.Nullable<System.DateTime> _NgayBan;
		
		private string _NguoiBan;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private string _NguoiTao;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private string _NguoiCapNhat;
		
		private EntitySet<ChiTietHoaDonBan> _ChiTietHoaDonBans;
		
		private EntityRef<San> _San;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHoaDonChanging(int value);
    partial void OnIDHoaDonChanged();
    partial void OnIDSanChanging(System.Nullable<int> value);
    partial void OnIDSanChanged();
    partial void OnThoiGianBDauChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBDauChanged();
    partial void OnThoiGianKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKetThucChanged();
    partial void OnDonGiaSanChanging(System.Nullable<int> value);
    partial void OnDonGiaSanChanged();
    partial void OnNgayBanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBanChanged();
    partial void OnNguoiBanChanging(string value);
    partial void OnNguoiBanChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnNguoiTaoChanging(string value);
    partial void OnNguoiTaoChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnNguoiCapNhatChanging(string value);
    partial void OnNguoiCapNhatChanged();
    #endregion
		
		public HoaDonBanHang()
		{
			this._ChiTietHoaDonBans = new EntitySet<ChiTietHoaDonBan>(new Action<ChiTietHoaDonBan>(this.attach_ChiTietHoaDonBans), new Action<ChiTietHoaDonBan>(this.detach_ChiTietHoaDonBans));
			this._San = default(EntityRef<San>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHoaDon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDHoaDon
		{
			get
			{
				return this._IDHoaDon;
			}
			set
			{
				if ((this._IDHoaDon != value))
				{
					this.OnIDHoaDonChanging(value);
					this.SendPropertyChanging();
					this._IDHoaDon = value;
					this.SendPropertyChanged("IDHoaDon");
					this.OnIDHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSan", DbType="Int")]
		public System.Nullable<int> IDSan
		{
			get
			{
				return this._IDSan;
			}
			set
			{
				if ((this._IDSan != value))
				{
					if (this._San.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSanChanging(value);
					this.SendPropertyChanging();
					this._IDSan = value;
					this.SendPropertyChanged("IDSan");
					this.OnIDSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianBDau
		{
			get
			{
				return this._ThoiGianBDau;
			}
			set
			{
				if ((this._ThoiGianBDau != value))
				{
					this.OnThoiGianBDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBDau = value;
					this.SendPropertyChanged("ThoiGianBDau");
					this.OnThoiGianBDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaSan", DbType="Int")]
		public System.Nullable<int> DonGiaSan
		{
			get
			{
				return this._DonGiaSan;
			}
			set
			{
				if ((this._DonGiaSan != value))
				{
					this.OnDonGiaSanChanging(value);
					this.SendPropertyChanging();
					this._DonGiaSan = value;
					this.SendPropertyChanged("DonGiaSan");
					this.OnDonGiaSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayBan
		{
			get
			{
				return this._NgayBan;
			}
			set
			{
				if ((this._NgayBan != value))
				{
					this.OnNgayBanChanging(value);
					this.SendPropertyChanging();
					this._NgayBan = value;
					this.SendPropertyChanged("NgayBan");
					this.OnNgayBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiBan", DbType="VarChar(30)")]
		public string NguoiBan
		{
			get
			{
				return this._NguoiBan;
			}
			set
			{
				if ((this._NguoiBan != value))
				{
					this.OnNguoiBanChanging(value);
					this.SendPropertyChanging();
					this._NguoiBan = value;
					this.SendPropertyChanged("NguoiBan");
					this.OnNguoiBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiTao", DbType="VarChar(30)")]
		public string NguoiTao
		{
			get
			{
				return this._NguoiTao;
			}
			set
			{
				if ((this._NguoiTao != value))
				{
					this.OnNguoiTaoChanging(value);
					this.SendPropertyChanging();
					this._NguoiTao = value;
					this.SendPropertyChanged("NguoiTao");
					this.OnNguoiTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiCapNhat", DbType="VarChar(50)")]
		public string NguoiCapNhat
		{
			get
			{
				return this._NguoiCapNhat;
			}
			set
			{
				if ((this._NguoiCapNhat != value))
				{
					this.OnNguoiCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NguoiCapNhat = value;
					this.SendPropertyChanged("NguoiCapNhat");
					this.OnNguoiCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBanHang_ChiTietHoaDonBan", Storage="_ChiTietHoaDonBans", ThisKey="IDHoaDon", OtherKey="IDHoaDon")]
		public EntitySet<ChiTietHoaDonBan> ChiTietHoaDonBans
		{
			get
			{
				return this._ChiTietHoaDonBans;
			}
			set
			{
				this._ChiTietHoaDonBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="San_HoaDonBanHang", Storage="_San", ThisKey="IDSan", OtherKey="ID", IsForeignKey=true)]
		public San San
		{
			get
			{
				return this._San.Entity;
			}
			set
			{
				San previousValue = this._San.Entity;
				if (((previousValue != value) 
							|| (this._San.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._San.Entity = null;
						previousValue.HoaDonBanHangs.Remove(this);
					}
					this._San.Entity = value;
					if ((value != null))
					{
						value.HoaDonBanHangs.Add(this);
						this._IDSan = value.ID;
					}
					else
					{
						this._IDSan = default(Nullable<int>);
					}
					this.SendPropertyChanged("San");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonBans(ChiTietHoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBanHang = this;
		}
		
		private void detach_ChiTietHoaDonBans(ChiTietHoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBanHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonNhap")]
	public partial class HoaDonNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NhanVienNhap;
		
		private System.DateTime _NgayNhap;
		
		private System.Nullable<int> _TienThanhToan;
		
		private System.DateTime _NgayTao;
		
		private string _NguoiTao;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private string _NguoiCapNhat;
		
		private EntitySet<ChiTietHoaDonNhap> _ChiTietHoaDonNhaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNhanVienNhapChanging(string value);
    partial void OnNhanVienNhapChanged();
    partial void OnNgayNhapChanging(System.DateTime value);
    partial void OnNgayNhapChanged();
    partial void OnTienThanhToanChanging(System.Nullable<int> value);
    partial void OnTienThanhToanChanged();
    partial void OnNgayTaoChanging(System.DateTime value);
    partial void OnNgayTaoChanged();
    partial void OnNguoiTaoChanging(string value);
    partial void OnNguoiTaoChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnNguoiCapNhatChanging(string value);
    partial void OnNguoiCapNhatChanged();
    #endregion
		
		public HoaDonNhap()
		{
			this._ChiTietHoaDonNhaps = new EntitySet<ChiTietHoaDonNhap>(new Action<ChiTietHoaDonNhap>(this.attach_ChiTietHoaDonNhaps), new Action<ChiTietHoaDonNhap>(this.detach_ChiTietHoaDonNhaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienNhap", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NhanVienNhap
		{
			get
			{
				return this._NhanVienNhap;
			}
			set
			{
				if ((this._NhanVienNhap != value))
				{
					this.OnNhanVienNhapChanging(value);
					this.SendPropertyChanging();
					this._NhanVienNhap = value;
					this.SendPropertyChanged("NhanVienNhap");
					this.OnNhanVienNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime NOT NULL")]
		public System.DateTime NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienThanhToan", DbType="Int")]
		public System.Nullable<int> TienThanhToan
		{
			get
			{
				return this._TienThanhToan;
			}
			set
			{
				if ((this._TienThanhToan != value))
				{
					this.OnTienThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TienThanhToan = value;
					this.SendPropertyChanged("TienThanhToan");
					this.OnTienThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime NOT NULL")]
		public System.DateTime NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiTao", DbType="VarChar(30)")]
		public string NguoiTao
		{
			get
			{
				return this._NguoiTao;
			}
			set
			{
				if ((this._NguoiTao != value))
				{
					this.OnNguoiTaoChanging(value);
					this.SendPropertyChanging();
					this._NguoiTao = value;
					this.SendPropertyChanged("NguoiTao");
					this.OnNguoiTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiCapNhat", DbType="VarChar(30)")]
		public string NguoiCapNhat
		{
			get
			{
				return this._NguoiCapNhat;
			}
			set
			{
				if ((this._NguoiCapNhat != value))
				{
					this.OnNguoiCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NguoiCapNhat = value;
					this.SendPropertyChanged("NguoiCapNhat");
					this.OnNguoiCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhap_ChiTietHoaDonNhap", Storage="_ChiTietHoaDonNhaps", ThisKey="ID", OtherKey="IDHoaDon")]
		public EntitySet<ChiTietHoaDonNhap> ChiTietHoaDonNhaps
		{
			get
			{
				return this._ChiTietHoaDonNhaps;
			}
			set
			{
				this._ChiTietHoaDonNhaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonNhaps(ChiTietHoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhap = this;
		}
		
		private void detach_ChiTietHoaDonNhaps(ChiTietHoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSan")]
	public partial class LoaiSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenLoaiSan;
		
		private System.Nullable<int> _DonGia;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private string _NguoiTao;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private string _NguoiCapNhat;
		
		private EntitySet<San> _Sans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenLoaiSanChanging(string value);
    partial void OnTenLoaiSanChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnNguoiTaoChanging(string value);
    partial void OnNguoiTaoChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnNguoiCapNhatChanging(string value);
    partial void OnNguoiCapNhatChanged();
    #endregion
		
		public LoaiSan()
		{
			this._Sans = new EntitySet<San>(new Action<San>(this.attach_Sans), new Action<San>(this.detach_Sans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoaiSan
		{
			get
			{
				return this._TenLoaiSan;
			}
			set
			{
				if ((this._TenLoaiSan != value))
				{
					this.OnTenLoaiSanChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSan = value;
					this.SendPropertyChanged("TenLoaiSan");
					this.OnTenLoaiSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiTao", DbType="VarChar(30)")]
		public string NguoiTao
		{
			get
			{
				return this._NguoiTao;
			}
			set
			{
				if ((this._NguoiTao != value))
				{
					this.OnNguoiTaoChanging(value);
					this.SendPropertyChanging();
					this._NguoiTao = value;
					this.SendPropertyChanged("NguoiTao");
					this.OnNguoiTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiCapNhat", DbType="VarChar(30)")]
		public string NguoiCapNhat
		{
			get
			{
				return this._NguoiCapNhat;
			}
			set
			{
				if ((this._NguoiCapNhat != value))
				{
					this.OnNguoiCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NguoiCapNhat = value;
					this.SendPropertyChanged("NguoiCapNhat");
					this.OnNguoiCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSan_San", Storage="_Sans", ThisKey="ID", OtherKey="IDLoaiSan")]
		public EntitySet<San> Sans
		{
			get
			{
				return this._Sans;
			}
			set
			{
				this._Sans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sans(San entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSan = this;
		}
		
		private void detach_Sans(San entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MatHang")]
	public partial class MatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenMatHang;
		
		private int _DonGiaBan;
		
		private string _NguoiTao;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private string _NguoiCapNhat;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private EntitySet<ChiTietHoaDonBan> _ChiTietHoaDonBans;
		
		private EntitySet<ChiTietHoaDonNhap> _ChiTietHoaDonNhaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenMatHangChanging(string value);
    partial void OnTenMatHangChanged();
    partial void OnDonGiaBanChanging(int value);
    partial void OnDonGiaBanChanged();
    partial void OnNguoiTaoChanging(string value);
    partial void OnNguoiTaoChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnNguoiCapNhatChanging(string value);
    partial void OnNguoiCapNhatChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    #endregion
		
		public MatHang()
		{
			this._ChiTietHoaDonBans = new EntitySet<ChiTietHoaDonBan>(new Action<ChiTietHoaDonBan>(this.attach_ChiTietHoaDonBans), new Action<ChiTietHoaDonBan>(this.detach_ChiTietHoaDonBans));
			this._ChiTietHoaDonNhaps = new EntitySet<ChiTietHoaDonNhap>(new Action<ChiTietHoaDonNhap>(this.attach_ChiTietHoaDonNhaps), new Action<ChiTietHoaDonNhap>(this.detach_ChiTietHoaDonNhaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMatHang", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMatHang
		{
			get
			{
				return this._TenMatHang;
			}
			set
			{
				if ((this._TenMatHang != value))
				{
					this.OnTenMatHangChanging(value);
					this.SendPropertyChanging();
					this._TenMatHang = value;
					this.SendPropertyChanged("TenMatHang");
					this.OnTenMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaBan", DbType="Int NOT NULL")]
		public int DonGiaBan
		{
			get
			{
				return this._DonGiaBan;
			}
			set
			{
				if ((this._DonGiaBan != value))
				{
					this.OnDonGiaBanChanging(value);
					this.SendPropertyChanging();
					this._DonGiaBan = value;
					this.SendPropertyChanged("DonGiaBan");
					this.OnDonGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiTao", DbType="VarChar(30)")]
		public string NguoiTao
		{
			get
			{
				return this._NguoiTao;
			}
			set
			{
				if ((this._NguoiTao != value))
				{
					this.OnNguoiTaoChanging(value);
					this.SendPropertyChanging();
					this._NguoiTao = value;
					this.SendPropertyChanged("NguoiTao");
					this.OnNguoiTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiCapNhat", DbType="VarChar(30)")]
		public string NguoiCapNhat
		{
			get
			{
				return this._NguoiCapNhat;
			}
			set
			{
				if ((this._NguoiCapNhat != value))
				{
					this.OnNguoiCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NguoiCapNhat = value;
					this.SendPropertyChanged("NguoiCapNhat");
					this.OnNguoiCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietHoaDonBan", Storage="_ChiTietHoaDonBans", ThisKey="ID", OtherKey="IDMatHang")]
		public EntitySet<ChiTietHoaDonBan> ChiTietHoaDonBans
		{
			get
			{
				return this._ChiTietHoaDonBans;
			}
			set
			{
				this._ChiTietHoaDonBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietHoaDonNhap", Storage="_ChiTietHoaDonNhaps", ThisKey="ID", OtherKey="IDMatHang")]
		public EntitySet<ChiTietHoaDonNhap> ChiTietHoaDonNhaps
		{
			get
			{
				return this._ChiTietHoaDonNhaps;
			}
			set
			{
				this._ChiTietHoaDonNhaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonBans(ChiTietHoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_ChiTietHoaDonBans(ChiTietHoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
		
		private void attach_ChiTietHoaDonNhaps(ChiTietHoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_ChiTietHoaDonNhaps(ChiTietHoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Password;
		
		private string _HoVaTen;
		
		private string _DienThoai;
		
		private string _DiaChi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHoVaTenChanging(string value);
    partial void OnHoVaTenChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public NhanVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoVaTen", DbType="NVarChar(30)")]
		public string HoVaTen
		{
			get
			{
				return this._HoVaTen;
			}
			set
			{
				if ((this._HoVaTen != value))
				{
					this.OnHoVaTenChanging(value);
					this.SendPropertyChanging();
					this._HoVaTen = value;
					this.SendPropertyChanged("HoVaTen");
					this.OnHoVaTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(30)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="VarChar(150)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.San")]
	public partial class San : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenSan;
		
		private System.Nullable<byte> _TrangThai;
		
		private System.Nullable<int> _IDLoaiSan;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private string _NguoiTao;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private string _NguoiCapNhat;
		
		private EntitySet<HoaDonBanHang> _HoaDonBanHangs;
		
		private EntityRef<LoaiSan> _LoaiSan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenSanChanging(string value);
    partial void OnTenSanChanged();
    partial void OnTrangThaiChanging(System.Nullable<byte> value);
    partial void OnTrangThaiChanged();
    partial void OnIDLoaiSanChanging(System.Nullable<int> value);
    partial void OnIDLoaiSanChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnNguoiTaoChanging(string value);
    partial void OnNguoiTaoChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnNguoiCapNhatChanging(string value);
    partial void OnNguoiCapNhatChanged();
    #endregion
		
		public San()
		{
			this._HoaDonBanHangs = new EntitySet<HoaDonBanHang>(new Action<HoaDonBanHang>(this.attach_HoaDonBanHangs), new Action<HoaDonBanHang>(this.detach_HoaDonBanHangs));
			this._LoaiSan = default(EntityRef<LoaiSan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenSan
		{
			get
			{
				return this._TenSan;
			}
			set
			{
				if ((this._TenSan != value))
				{
					this.OnTenSanChanging(value);
					this.SendPropertyChanging();
					this._TenSan = value;
					this.SendPropertyChanged("TenSan");
					this.OnTenSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="TinyInt")]
		public System.Nullable<byte> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiSan", DbType="Int")]
		public System.Nullable<int> IDLoaiSan
		{
			get
			{
				return this._IDLoaiSan;
			}
			set
			{
				if ((this._IDLoaiSan != value))
				{
					if (this._LoaiSan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiSanChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiSan = value;
					this.SendPropertyChanged("IDLoaiSan");
					this.OnIDLoaiSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiTao", DbType="VarChar(30)")]
		public string NguoiTao
		{
			get
			{
				return this._NguoiTao;
			}
			set
			{
				if ((this._NguoiTao != value))
				{
					this.OnNguoiTaoChanging(value);
					this.SendPropertyChanging();
					this._NguoiTao = value;
					this.SendPropertyChanged("NguoiTao");
					this.OnNguoiTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiCapNhat", DbType="VarChar(30)")]
		public string NguoiCapNhat
		{
			get
			{
				return this._NguoiCapNhat;
			}
			set
			{
				if ((this._NguoiCapNhat != value))
				{
					this.OnNguoiCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NguoiCapNhat = value;
					this.SendPropertyChanged("NguoiCapNhat");
					this.OnNguoiCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="San_HoaDonBanHang", Storage="_HoaDonBanHangs", ThisKey="ID", OtherKey="IDSan")]
		public EntitySet<HoaDonBanHang> HoaDonBanHangs
		{
			get
			{
				return this._HoaDonBanHangs;
			}
			set
			{
				this._HoaDonBanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSan_San", Storage="_LoaiSan", ThisKey="IDLoaiSan", OtherKey="ID", IsForeignKey=true)]
		public LoaiSan LoaiSan
		{
			get
			{
				return this._LoaiSan.Entity;
			}
			set
			{
				LoaiSan previousValue = this._LoaiSan.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSan.Entity = null;
						previousValue.Sans.Remove(this);
					}
					this._LoaiSan.Entity = value;
					if ((value != null))
					{
						value.Sans.Add(this);
						this._IDLoaiSan = value.ID;
					}
					else
					{
						this._IDLoaiSan = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiSan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.San = this;
		}
		
		private void detach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.San = null;
		}
	}
}
#pragma warning restore 1591
